version: '3.8'

services:
  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app_net

  auth:
    build: ./auth
    container_name: auth
    restart: on-failure
    env_file: ./.env
    ports:
      - "8080:8080"
    depends_on:
      - redis
      - db
      - kafka
    networks:
      - app_net
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:${POSTGRESDB_DOCKER_PORT}/${DB_NAME}
      - SPRING_DATASOURCE_USERNAME=${DB_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092 

  asteroids:
    build: ./asteroids
    container_name: asteroids
    restart: on-failure
    env_file: ./.env
    ports:
      - "8081:8081"
    depends_on:
      - redis
      - db
      - auth
    networks:
      - app_net
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:${POSTGRESDB_DOCKER_PORT}/${DB_NAME}
      - SPRING_DATASOURCE_USERNAME=${DB_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update

  db:
    image: postgres
    container_name: postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "${POSTGRESDB_LOCAL_PORT}:${POSTGRESDB_DOCKER_PORT}"
    networks:
      - app_net

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - db
    networks:
      - app_net

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - app_net

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper  
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092  # Hanya satu listener
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092  # Iklan listener untuk koneksi dari Docker
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT_MS: 6000
      KAFKA_ZOOKEEPER_CONNECTION_TIMEOUT_MS: 6000
    networks:
      - app_net

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    ports:
      - "8082:8080"
    depends_on:
      - kafka
    networks:
      - app_net

networks:
  app_net:
    driver: bridge
